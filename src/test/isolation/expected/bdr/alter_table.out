Parsed test spec with 2 sessions

starting permutation: n1s1 n1sync n2read n1s2 n1sync n2read n1s3 n1s4 n1sync n2read n1s5 n1s6 n1sync n2read n1s7 n1sync n2read n1s8 n1s9 n1s10 n2s1 n2sync n1s11 n1sync n2sync n2read n1read n2s2 n2sync n1read
step n1s1: INSERT INTO tst (a, b) VALUES (4, 'four');
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              

1              one            
2              two            
3              three          
4              four           
step n1s2: ALTER TABLE tst ADD COLUMN c TEXT;
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              c              

1              one                           
2              two                           
3              three                         
4              four                          
step n1s3: INSERT INTO tst (a, b, c) VALUES (5, 'five', 'new');
step n1s4: UPDATE tst set c = 'updated' WHERE c IS NULL;
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              c              

1              one            updated        
2              two            updated        
3              three          updated        
4              four           updated        
5              five           new            
step n1s5: ALTER TABLE tst ALTER COLUMN c SET DEFAULT 'dflt';
step n1s6: INSERT INTO tst (a, b) VALUES (6, 'six');
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              c              

1              one            updated        
2              two            updated        
3              three          updated        
4              four           updated        
5              five           new            
6              six            dflt           
step n1s7: DELETE FROM tst where a = 5;
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              c              

1              one            updated        
2              two            updated        
3              three          updated        
4              four           updated        
6              six            dflt           
step n1s8: ALTER TABLE tst ADD COLUMN d INTEGER DEFAULT 100;
ERROR:  ALTER TABLE ... ADD COLUMN ... DEFAULT may only affect UNLOGGED or TEMPORARY tables when BDR is active; tst is a regular table
step n1s9: BEGIN;
step n1s10: ALTER TABLE tst DROP COLUMN c;
step n2s1: UPDATE tst SET c = 'changed' WHERE a = 1;
ERROR:  database is locked against writes
step n2sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n1s11: COMMIT;
step n1sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n2read: SELECT * FROM tst ORDER BY a;
a              b              

1              one            
2              two            
3              three          
4              four           
6              six            
step n1read: SELECT * FROM tst ORDER BY a;
a              b              

1              one            
2              two            
3              three          
4              four           
6              six            
step n2s2: UPDATE tst SET b = 'changed' WHERE a = 1;
step n2sync: SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
pg_xlog_wait_remote_apply

               
               
step n1read: SELECT * FROM tst ORDER BY a;
a              b              

1              changed        
2              two            
3              three          
4              four           
6              six            

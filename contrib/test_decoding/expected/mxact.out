Parsed test spec with 3 sessions

starting permutation: s0init s0start s1begin s1sharepgclass s2begin s2sharepgclass s0w s0start s2commit s1commit
step s0init: SELECT 'init' FROM pg_create_decoding_replication_slot('isolation_slot', 'test_decoding');
?column?       

init           
step s0start: SELECT data FROM pg_decoding_slot_get_changes('isolation_slot', 'now', 'include-xids', 'false');
data           

step s1begin: BEGIN;
step s1sharepgclass: SELECT count(*) > 1 FROM (SELECT * FROM pg_class FOR SHARE) s;
?column?       

t              
step s2begin: BEGIN;
step s2sharepgclass: SELECT count(*) > 1 FROM (SELECT * FROM pg_class FOR SHARE) s;
?column?       

t              
step s0w: INSERT INTO do_write DEFAULT VALUES;
step s0start: SELECT data FROM pg_decoding_slot_get_changes('isolation_slot', 'now', 'include-xids', 'false');
data           

BEGIN          
table "do_write": INSERT: id[int4]:1
COMMIT         
step s2commit: COMMIT;
step s1commit: COMMIT;
?column?       

stop           

starting permutation: s0init s0start s1begin s1keysharepgclass s2begin s2keysharepgclass s0alter s0w s0start s2commit s1commit
step s0init: SELECT 'init' FROM pg_create_decoding_replication_slot('isolation_slot', 'test_decoding');
?column?       

init           
step s0start: SELECT data FROM pg_decoding_slot_get_changes('isolation_slot', 'now', 'include-xids', 'false');
data           

step s1begin: BEGIN;
step s1keysharepgclass: SELECT count(*) > 1 FROM (SELECT * FROM pg_class FOR KEY SHARE) s;
?column?       

t              
step s2begin: BEGIN;
step s2keysharepgclass: SELECT count(*) > 1 FROM (SELECT * FROM pg_class FOR KEY SHARE) s;
?column?       

t              
step s0alter: ALTER TABLE do_write ADD column ts timestamptz;
step s0w: INSERT INTO do_write DEFAULT VALUES;
step s0start: SELECT data FROM pg_decoding_slot_get_changes('isolation_slot', 'now', 'include-xids', 'false');
data           

BEGIN          
COMMIT         
BEGIN          
table "do_write": INSERT: id[int4]:1 ts[timestamptz]:(null)
COMMIT         
step s2commit: COMMIT;
step s1commit: COMMIT;
?column?       

stop           

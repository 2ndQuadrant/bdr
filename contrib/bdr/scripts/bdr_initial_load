#!/usr/bin/env bash
#
# bdr_initial_load copies data from a running BDR instance's database to the empty
# local database that's due to be joined into the BDR group.
#
# It must exit with an error if the dump OR the load fails. The load must be
# performed in a single transaction or must use --clean to flush any local
# contents first, i.e. it must cope with being re-run if the restore is
# interrupted.
#

JOBS=1

i=0
argv=("$@")
while (($i < ${#argv[*]})); do
    case "${argv[$i]}" in
        --snapshot)
            ((i++)); SNAPSHOT="${argv[$i]}"
        ;;
        --source)
            ((i++)); SOURCE="${argv[$i]}"
        ;;
        --target)
            ((i++)); TARGET="${argv[$i]}"
        ;;
        --tmp-directory)
            ((i++)); TMPDIR="${argv[$i]}"
        ;;
        --jobs)
            ((i++)); JOBS="${argv[$i]}"
        ;;
        --help)
            echo "Usage: bdr_replica --source <dsn> --target <dsn> [--snapshot <name>] --dir /path/to/dir [--jobs N]"
            echo "<dsn> is a libpq conninfo string, e.g. \"host=/tmp post=5433 dbnae=xxx\""
            exit 0
        ;;
        *)
            echo Unknown command-line option: ${argv[$i]}
            exit 1
        ;;
    esac

    ((i++))
done

if [ -z "$SOURCE" ]; then
    echo Please specify a source DSN with '--source "port=nnn dbname=xxx"'; exit 1
fi

if [ -z "$TARGET" ]; then
    echo Please specify a target DSN with '--target "port=nnn dbname=xxx"'; exit 1
fi

if [ -z "$TMPDIR" ]; then
    echo Please specify a directory with '--temp-directory /path/to/dir'; exit 1
fi

SNAP=${SNAPSHOT:+"--snapshot $SNAPSHOT"}

echo "Dumping remote database \"$SOURCE\" with $JOBS concurrent workers to \"$TMPDIR\""
if ! pg_dump -j $JOBS $SNAP -F d -f $TMPDIR "$SOURCE"; then
    echo "pg_dump of "$SOURCE" failed, aborting"
    exit 1
fi

echo "Restoring dump to local DB \"$TARGET\" with $JOBS concurrent workers from \"$TMPDIR\""
if ! PGOPTIONS="-c bdr.permit_unsafe_ddl_commands=true -c bdr.skip_ddl_replication=true" pg_restore --exit-on-error --single-transaction -j $JOBS -F d -d "$TARGET" $TMPDIR; then
    echo "pg_restore to "$TARGET" failed, aborting"
    exit 2
fi

exit 0

-- tests for functions and triggers
\c postgres super
CREATE FUNCTION test_fn(IN inpar character varying (20), INOUT inoutpar integer, OUT timestamp with time zone) RETURNS SETOF record AS
$$
BEGIN
END;
$$ LANGUAGE plpgsql IMMUTABLE  STRICT;
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |     100 |    1000 |           0 | -            | f        | f           | f         | f            | t           | t         | i           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

\c regression
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |     100 |    1000 |           0 | -            | f        | f           | f         | f            | t           | t         | i           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

ALTER FUNCTION test_fn(varchar, integer) SECURITY DEFINER CALLED ON NULL INPUT VOLATILE ROWS 1 COST 1;
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |       1 |       1 |           0 | -            | f        | f           | t         | f            | f           | t         | v           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

\c postgres
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |       1 |       1 |           0 | -            | f        | f           | t         | f            | f           | t         | v           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

CREATE OR REPLACE FUNCTION test_fn(IN inpar varchar, INOUT inoutpar integer, OUT timestamp with time zone) RETURNS SETOF record AS
$$
BEGIN
END;
$$ LANGUAGE plpgsql STABLE;
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |     100 |    1000 |           0 | -            | f        | f           | f         | f            | f           | t         | s           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

\c regression
SELECT * FROM pg_proc WHERE proname = 'test_fn';
 proname | pronamespace | proowner | prolang | procost | prorows | provariadic | protransform | proisagg | proiswindow | prosecdef | proleakproof | proisstrict | proretset | provolatile | pronargs | pronargdefaults | prorettype | proargtypes | proallargtypes | proargmodes |     proargnames     | proargdefaults | prosrc | probin | proconfig | proacl 
---------+--------------+----------+---------+---------+---------+-------------+--------------+----------+-------------+-----------+--------------+-------------+-----------+-------------+----------+-----------------+------------+-------------+----------------+-------------+---------------------+----------------+--------+--------+-----------+--------
 test_fn |         2200 |    17047 |   12785 |     100 |    1000 |           0 | -            | f        | f           | f         | f            | f           | t         | s           |        2 |               0 |       2249 | 1043 23     | {1043,23,1184} | {i,b,o}     | {inpar,inoutpar,""} |                |       +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | BEGIN +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                | END;  +|        |           | 
         |              |          |         |         |         |             |              |          |             |           |              |             |           |             |          |                 |            |             |                |             |                     |                |        |        |           | 
(1 row)

DROP FUNCTION test_fn(varchar, integer);
\df test_fn
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

\c postgres
\df test_fn
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

CREATE FUNCTION test_trigger_fn() RETURNS trigger AS
$$
BEGIN
END;
$$ LANGUAGE plpgsql;
\df+ test_trigger_fn
                                                                 List of functions
 Schema |      Name       | Result data type | Argument data types |  Type   | Security | Volatility | Owner | Language | Source code | Description 
--------+-----------------+------------------+---------------------+---------+----------+------------+-------+----------+-------------+-------------
 public | test_trigger_fn | trigger          |                     | trigger | invoker  | volatile   | super | plpgsql  |            +| 
        |                 |                  |                     |         |          |            |       |          | BEGIN      +| 
        |                 |                  |                     |         |          |            |       |          | END;       +| 
        |                 |                  |                     |         |          |            |       |          |             | 
(1 row)

CREATE TABLE test_trigger_table (f1 integer, f2 text);
CREATE TRIGGER test_trigger_fn_trg1 BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (True) EXECUTE PROCEDURE test_trigger_fn();
CREATE TRIGGER test_trigger_fn_trg2 AFTER UPDATE OF f1 ON test_trigger_table FOR EACH ROW EXECUTE PROCEDURE test_trigger_fn();
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg1 BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    test_trigger_fn_trg2 AFTER UPDATE OF f1 ON test_trigger_table FOR EACH ROW EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

\c regression
\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg1 BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    test_trigger_fn_trg2 AFTER UPDATE OF f1 ON test_trigger_table FOR EACH ROW EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

ALTER TRIGGER test_trigger_fn_trg1 ON test_trigger_table RENAME TO test_trigger_fn_trg;
\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    test_trigger_fn_trg2 AFTER UPDATE OF f1 ON test_trigger_table FOR EACH ROW EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

\c postgres
\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    test_trigger_fn_trg2 AFTER UPDATE OF f1 ON test_trigger_table FOR EACH ROW EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

DROP TRIGGER test_trigger_fn_trg2 ON test_trigger_table;
\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

\c regression
\d+ test_trigger_table
                  Table "public.test_trigger_table"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 f1     | integer |           | plain    |              | 
 f2     | text    |           | extended |              | 
Triggers:
    test_trigger_fn_trg BEFORE INSERT OR DELETE ON test_trigger_table FOR EACH STATEMENT WHEN (true) EXECUTE PROCEDURE test_trigger_fn()
    truncate_trigger AFTER TRUNCATE ON test_trigger_table FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

-- should fail (for test to be useful it should be called on different node than CREATE FUNCTION)
DROP FUNCTION test_trigger_fn();
ERROR:  cannot drop function test_trigger_fn() because other objects depend on it
DETAIL:  trigger test_trigger_fn_trg on table test_trigger_table depends on function test_trigger_fn()
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP TABLE test_trigger_table;
DROP FUNCTION test_trigger_fn();
\d+ test_trigger_table
\c postgres
\d+ test_trigger_table
\df+ test_trigger_fn
                                                                 List of functions
 Schema |      Name       | Result data type | Argument data types |  Type   | Security | Volatility | Owner | Language | Source code | Description 
--------+-----------------+------------------+---------------------+---------+----------+------------+-------+----------+-------------+-------------
 public | test_trigger_fn | trigger          |                     | trigger | invoker  | volatile   | super | plpgsql  |            +| 
        |                 |                  |                     |         |          |            |       |          | BEGIN      +| 
        |                 |                  |                     |         |          |            |       |          | END;       +| 
        |                 |                  |                     |         |          |            |       |          |             | 
(1 row)


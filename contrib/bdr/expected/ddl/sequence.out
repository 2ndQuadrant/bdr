-- ALTER TABLE DROP COLUMN (pk column)
CREATE TABLE test (test_id SERIAL);
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\c postgres
\d+ test
                                                Table "public.test"
 Column  |  Type   |                       Modifiers                        | Storage | Stats target | Description 
---------+---------+--------------------------------------------------------+---------+--------------+-------------
 test_id | integer | not null default nextval('test_test_id_seq'::regclass) | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

SELECT relname, relkind FROM pg_class WHERE relname = 'test_test_id_seq';
     relname      | relkind 
------------------+---------
 test_test_id_seq | S
(1 row)

\d+ test_test_id_seq
           Sequence "public.test_test_id_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_test_id_seq    | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 1                   | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: local
Owned by: public.test.test_id

ALTER TABLE test DROP COLUMN test_id;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\c regression
\d+ test
                       Table "public.test"
 Column | Type | Modifiers | Storage | Stats target | Description 
--------+------+-----------+---------+--------------+-------------
Triggers:
    truncate_trigger AFTER TRUNCATE ON test FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

SELECT relname, relkind FROM pg_class WHERE relname = 'test_test_id_seq';
 relname | relkind 
---------+---------
(0 rows)

DROP TABLE test;
-- ADD CONSTRAINT PRIMARY KEY
CREATE TABLE test (test_id SERIAL NOT NULL);
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\c postgres
\d+ test
                                                Table "public.test"
 Column  |  Type   |                       Modifiers                        | Storage | Stats target | Description 
---------+---------+--------------------------------------------------------+---------+--------------+-------------
 test_id | integer | not null default nextval('test_test_id_seq'::regclass) | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

ALTER TABLE test ADD CONSTRAINT test_pkey PRIMARY KEY (test_id);
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\c regression
\d+ test
                                                Table "public.test"
 Column  |  Type   |                       Modifiers                        | Storage | Stats target | Description 
---------+---------+--------------------------------------------------------+---------+--------------+-------------
 test_id | integer | not null default nextval('test_test_id_seq'::regclass) | plain   |              | 
Indexes:
    "test_pkey" PRIMARY KEY, btree (test_id)
Triggers:
    truncate_trigger AFTER TRUNCATE ON test FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

DROP TABLE test;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\c postgres
CREATE SEQUENCE test_seq USING bdr;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 1                   | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: bdr

\c regression
\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 1                   | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: bdr

ALTER SEQUENCE test_seq owned by test_tbl_serial_combined_pk.val;
ERROR:  relation "test_tbl_serial_combined_pk" does not exist
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 1                   | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: bdr

\c postgres
\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 1                   | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: bdr

-- these should fail
ALTER SEQUENCE test_seq increment by 10;
ERROR:  ALTER SEQUENCE ... increment is not supported for bdr sequences
ALTER SEQUENCE test_seq minvalue 0;
ERROR:  ALTER SEQUENCE ... minvalue is not supported for bdr sequences
ALTER SEQUENCE test_seq maxvalue 1000000;
ERROR:  ALTER SEQUENCE ... maxvalue is not supported for bdr sequences
ALTER SEQUENCE test_seq restart;
ERROR:  ALTER SEQUENCE ... restart is not supported for bdr sequences
ALTER SEQUENCE test_seq cache 10;
ERROR:  ALTER SEQUENCE ... cache is not supported for bdr sequences
ALTER SEQUENCE test_seq cycle;
ERROR:  ALTER SEQUENCE ... cycle is not supported for bdr sequences
DROP SEQUENCE test_seq;
CREATE SEQUENCE test_seq start 10000 owned by test_tbl_serial_combined_pk.val1 USING bdr;
ERROR:  relation "test_tbl_serial_combined_pk" does not exist
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_seq
\c regression
\d+ test_seq
DROP SEQUENCE test_seq;
ERROR:  sequence "test_seq" does not exist
-- these should fail
CREATE SEQUENCE test_seq increment by 10 USING bdr;
ERROR:  CREATE SEQUENCE ... increment is not supported for bdr sequences
CREATE SEQUENCE test_seq minvalue 10 USING bdr;
ERROR:  CREATE SEQUENCE ... minvalue is not supported for bdr sequences
CREATE SEQUENCE test_seq maxvalue 10 USING bdr;
ERROR:  CREATE SEQUENCE ... maxvalue is not supported for bdr sequences
CREATE SEQUENCE test_seq cache 10 USING bdr;
ERROR:  CREATE SEQUENCE ... cache is not supported for bdr sequences
CREATE SEQUENCE test_seq cycle USING bdr;
ERROR:  CREATE SEQUENCE ... cycle is not supported for bdr sequences
-- non-bdr sequence
CREATE SEQUENCE test_seq increment 10;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 10                  | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: local

\c postgres
\d+ test_seq
               Sequence "public.test_seq"
    Column     |  Type   |        Value        | Storage 
---------------+---------+---------------------+---------
 sequence_name | name    | test_seq            | plain
 last_value    | bigint  | 1                   | plain
 start_value   | bigint  | 1                   | plain
 increment_by  | bigint  | 10                  | plain
 max_value     | bigint  | 9223372036854775807 | plain
 min_value     | bigint  | 1                   | plain
 cache_value   | bigint  | 1                   | plain
 log_cnt       | bigint  | 0                   | plain
 is_cycled     | boolean | f                   | plain
 is_called     | boolean | f                   | plain
Access Method: local

ALTER SEQUENCE test_seq increment by 10;
ALTER SEQUENCE test_seq minvalue 0;
ALTER SEQUENCE test_seq maxvalue 1000000;
ALTER SEQUENCE test_seq restart;
ALTER SEQUENCE test_seq cache 10;
ALTER SEQUENCE test_seq cycle;
ALTER SEQUENCE test_seq RENAME TO renamed_test_seq;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_seq
\d+ renamed_test_seq
      Sequence "public.renamed_test_seq"
    Column     |  Type   |  Value   | Storage 
---------------+---------+----------+---------
 sequence_name | name    | test_seq | plain
 last_value    | bigint  | 1        | plain
 start_value   | bigint  | 1        | plain
 increment_by  | bigint  | 10       | plain
 max_value     | bigint  | 1000000  | plain
 min_value     | bigint  | 0        | plain
 cache_value   | bigint  | 10       | plain
 log_cnt       | bigint  | 0        | plain
 is_cycled     | boolean | t        | plain
 is_called     | boolean | f        | plain
Access Method: local

\c regression
\d+ test_seq
\d+ renamed_test_seq
      Sequence "public.renamed_test_seq"
    Column     |  Type   |  Value   | Storage 
---------------+---------+----------+---------
 sequence_name | name    | test_seq | plain
 last_value    | bigint  | 1        | plain
 start_value   | bigint  | 1        | plain
 increment_by  | bigint  | 10       | plain
 max_value     | bigint  | 1000000  | plain
 min_value     | bigint  | 0        | plain
 cache_value   | bigint  | 10       | plain
 log_cnt       | bigint  | 0        | plain
 is_cycled     | boolean | t        | plain
 is_called     | boolean | f        | plain
Access Method: local

ALTER SEQUENCE renamed_test_seq USING bdr;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ renamed_test_seq;
      Sequence "public.renamed_test_seq"
    Column     |  Type   |  Value   | Storage 
---------------+---------+----------+---------
 sequence_name | name    | test_seq | plain
 last_value    | bigint  | 1        | plain
 start_value   | bigint  | 1        | plain
 increment_by  | bigint  | 10       | plain
 max_value     | bigint  | 1000000  | plain
 min_value     | bigint  | 0        | plain
 cache_value   | bigint  | 10       | plain
 log_cnt       | bigint  | 0        | plain
 is_cycled     | boolean | t        | plain
 is_called     | boolean | f        | plain
Access Method: bdr

\c postgres
\d+ renamed_test_seq
      Sequence "public.renamed_test_seq"
    Column     |  Type   |  Value   | Storage 
---------------+---------+----------+---------
 sequence_name | name    | test_seq | plain
 last_value    | bigint  | 1        | plain
 start_value   | bigint  | 1        | plain
 increment_by  | bigint  | 10       | plain
 max_value     | bigint  | 1000000  | plain
 min_value     | bigint  | 0        | plain
 cache_value   | bigint  | 10       | plain
 log_cnt       | bigint  | 0        | plain
 is_cycled     | boolean | t        | plain
 is_called     | boolean | f        | plain
Access Method: bdr

DROP SEQUENCE renamed_test_seq;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ renamed_test_seq;
\c regression
\d+ renamed_test_seq
CREATE SEQUENCE test_seq;
CREATE TABLE test_tbl (a int DEFAULT nextval('test_seq'));
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_tbl
                                     Table "public.test_tbl"
 Column |  Type   |               Modifiers               | Storage | Stats target | Description 
--------+---------+---------------------------------------+---------+--------------+-------------
 a      | integer | default nextval('test_seq'::regclass) | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test_tbl FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

\c postgres
\d+ test_tbl
                                     Table "public.test_tbl"
 Column |  Type   |               Modifiers               | Storage | Stats target | Description 
--------+---------+---------------------------------------+---------+--------------+-------------
 a      | integer | default nextval('test_seq'::regclass) | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test_tbl FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

DROP SEQUENCE test_seq CASCADE;
NOTICE:  drop cascades to default for table test_tbl column a
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)

\d+ test_tbl
                       Table "public.test_tbl"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test_tbl FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

\c regression
\d+ test_tbl
                       Table "public.test_tbl"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Triggers:
    truncate_trigger AFTER TRUNCATE ON test_tbl FOR EACH STATEMENT EXECUTE PROCEDURE bdr.queue_truncate()

DROP TABLE test_tbl;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
 pg_xlog_wait_remote_apply 
---------------------------
 
 
(2 rows)


<chapter id="ddl-replication" xreflabel="DDL replication">
 <title>DDL Replication</title>
 <indexterm>
  <primary>DDL Replication</primary>
 </indexterm>

 <para>
  &bdr; supports replicating changes to a database's schemas to other
  connected nodes. That makes it easier to make certain DDL changes
  without worrying about having to manually distribute the DDL change
  to all nodes and ensure they're consistent.
 </para>

 <para>
  There is not currently an option to turn off DDL replication and
  apply DDL manually instead.
 </para>

 <para>
  Before doing DDL on &bdr;, read <xref linkend="ddl-replication-advice">
  and <xref linkend="ddl-replication-statements">.
 </para>

 <para>
  &bdr; is significantly different to standalone PostgreSQL when it
  comes to DDL, and treating it as the same is a fast path to replication
  problems.
 </para>

 <important>
  <para>
   While DDL is in progress on any node in the system, statements that perform
   writes (<literal>INSERT</literal>, <literal>UPDATE</literal>
   <literal>DELETE</literal>, any DDL, etc) on that node or any other node will
   <literal>ERROR</literal> even if the writes have nothing to do with the
   objects currently being modified by the DDL in progress.
  </para>
 </important>

 <sect1 id="ddl-replication-advice">
  <title>Executing DDL on BDR systems</title>

  <para>
   A BDR group is not the same as a standalone PostgreSQL server. It
   is based on asynchronous multi-master replication without a central
   locking and transaction co-ordinator. This has important implications
   when executing DDL.
  </para>

  <para>
   To safely manipulate the database schema in a asynchronous
   multimaster setup, all pending changes have to be replicated first.
   Otherwise it is possible that a row being replicated contains data
   for a row that has been dropped, or has no data for a row that is
   marked <literal>NOT NULL</literal>. More complex cases also exit.  To handle
   that problem, &bdr; acquires a so-called DDL lock the first time in a
   transaction schema changes are made.
  </para>

  <para>
   Acquiring the global DDL lock requires contacting all nodes in a BDR
   group, asking them to replicate all pending changes, and prevent
   further changes from being made. Once all nodes are fully caught up,
   the originator of the DDL lock is free to perform schema changes
   and replicate them to the other nodes.  <emphasis>While the global DDL lock
   is held by a node, no nodes may perform any DDL or make any changes to
   rows</emphasis>.
  </para>

  <para>
   This means that schema changes, in contrary to data changes, can
   only be performed while all configured nodes are reachable. If DDL
   has to be performed while a node is down, it has to be removed from
   the configuration (using <xref linkend="function-bdr-part-by-node-names">)
   first.
  </para>

  <para>
   DDL is a heavier weight operation than on standalone
   PostgreSQL. Performing DDL on any node will cancel (abort) currently running
   transactions <emphasis>on all nodes</emphasis> with an <literal>ERROR</literal>,
   and will reject new DML (<literal>INSERT</literal>,
   <literal>UPDATE</literal> and <literal>DELETE</literal> on all nodes with
   an <literal>ERROR</literal> with <literal>SQLSTATE</literal>
   <literal>55P03</literal>:
   <programlisting>
    ERROR: Database is locked against DDL operations
   </programlisting>
   This continues until the DDL operation has replicated to all nodes, been
   applied, and all nodes have confirmed to the DDL originator that the changes
   have been applied. <emphasis>All DDL and DML will <literal>ERROR</literal>,
   even if it does not affect the objects the currently in-progress DDL
   is modifying.</emphasis>
  </para>

  <para>
   To minimise the impact of DDL, transactions performing DDL should be short,
   should not be combined with lots of row changes, and should avoid long
   running foreign key lookups.
  </para>

  <para>
   If DDL is holding the system up for too long, it is possible and safe to
   cancel the DDL on the originating node like you would cancel any other
   statement, e.g. with <literal>Control-C</literal> in
   <application>psql</application> or with
   <function>pg_cancel_backend</function>.
  </para>

  <para>
   Once the DDL operation has committed on the originating node, you cannot
   cancel or abort it. You must wait for it to apply successfully on all
   other nodes and for them to replay confirmation. This is why it is important
   to keep DDL transactions short and fast.
  </para>

 </sect1>

 <sect1 id="ddl-replication-statements">
  <title>Statement specific DDL replication concerns</title>

  <para>
   Not all commands can be replicated automatically. Some are
   allowed regardless - generally ones that have affect on more
   than one database. Others are disallowed.
  </para>

  <important>
   <para>
    Global DDL, like <literal>CREATE ROLE</literal>, <literal>CREATE USER</literal>
    etc is <emphasis>not replicated</emphasis> and should be applied on each node
    if the created objects will be referenced by a BDR-enabled database.
   </para>
  </important>

  <sect2>
   <title>Not replicated DDL statements</title>

   <para>
    Some DDL statements, mainly those that affect objects that are
    PostgreSQL-instance-wide rather than database-sepecific, are not
    replicated. They are applied on the node that executes them without taking
    the global DDL lock and are not sent to other nodes.
   </para>

   <para>
    If you create non-replicated objects that create are to be referenced
    by replicated objects (e.g. creating a role, not replicated, then creating
    a table, replicated, that's owned by that role) you must ensure that the
    non-replicated object is created on all &bdr; nodes. You can do this
    manually, by running the statement on each node. Or you can use
    <xref linkend="function-bdr-replicate-ddl-command"> to apply the statement
    on the local node and manually enqueue it for replication on all nodes.
   </para>

   <para>
    Using <function>bdr.bdr_replicate_ddl_command</function> is the recommended
    approach, e.g.:
    <programlisting>
     SELECT bdr.bdr_replicate_ddl_command('CREATE USER myuser;');
    </programlisting>
   </para>

   <note>
    <para>
     It is not necessary that the definition of objects like roles be the same
     on all nodes, only that they exist. You can for example
     <literal>CREATE ROLE somerole WITH NOLOGIN</literal> on most nodes, but
     on one node you can create them <literal>WITH LOGIN</literal>.
    </para>
   </note>

   <para>
    The statements that are applied locally but not replicated are:

    <variablelist>

     <varlistentry id="ddl-create-database">
      <term><varname>CREATE DATABASE</varname>
       <indexterm>
        <primary><varname>CREATE DATABASE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE DATABASE</literal> cannot be
        replicated because &bdr;
        works on a per database level.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-role">
      <term><varname>CREATE ROLE/USER/GROUP</varname>
       <indexterm>
        <primary><varname>CREATE ROLE</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>CREATE USER</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>CREATE GROUP</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE ROLE</literal> cannot be replicated
        because &bdr; works on a
        per database level. It is possible that a workaround
        for this will be added.
       </para>
       <warning>
        <para>
         Not creating roles of the same name (not
         necessarily with the same access details otherwise
         though) on all systems can break replication when
         statements like <literal>ALTER TABLE ...
          OWNER TO</literal> are replicated.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-tablespace">
      <term><varname>CREATE TABLESPACE</varname>
       <indexterm>
        <primary><varname>CREATE TABLESPACE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TABLESPACE</literal> cannot be
        replicated because &bdr;
        works on a per database level.
       </para>
       <warning>
        <para>
         Not creating tablespaces of the same name (not
         necessarily with the same location though) on all
         systems can break replication when statements
         like <literal>ALTER TABLE ... SET
          TABLESPACE</literal> are replicated.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-drop-database">
      <term><varname>DROP DATABASE</varname>
       <indexterm>
        <primary><varname>DROP DATABASE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>DROP DATABASE</literal> cannot be
        replicated because &bdr;
        works on a per database level.
       </para>
       <para>
        Note that a database that is configured for &bdr; cannot be
        dropped while that is the case.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-drop-tablespace">
      <term><varname>DROP TABLESPACE</varname>
       <indexterm>
        <primary><varname>DROP TABLESPACE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>DROP TABLESPACE</literal> cannot be
        replicated because &bdr;
        works on a per database level.
       </para>
       <warning>
        <para>
         Dropping tablespaces only on some nodes can cause
         problems when relations on other nodes are moved
         into the tablespace that does not exist locally
         anymore.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-drop-role">
      <term><varname>DROP ROLE/USER/GROUP</varname>
       <indexterm>
        <primary><varname>DROP ROLE</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>DROP USER</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>DROP GROUP</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>DROP ROLE</literal> cannot be replicated
        because &bdr; works on a
        per database level. It is possible that a workaround
        for this will be added.
       </para>
       <warning>
        <para>
         Dropping role only on some nodes can cause
         problems when objects on other nodes are assigned
         to roles that do not exist locally anymore.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-role">
      <term><varname>ALTER ROLE/USER/GROUP</varname>
       <indexterm>
        <primary><varname>ALTER ROLE</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>ALTER USER</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>ALTER GROUP</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER ROLE</literal> cannot be replicated
        because &bdr; works on a
        per database level. It is possible that a workaround
        for this will be added.
       </para>
       <para>
        Normally all commands but <literal>ALTER ROLE
         ... RENAME TO ...</literal> should be safe to
        execute in the sense that doing so won't cause
        replication to break.
       </para>
       <warning>
        <para>
         Renaming a role only on some nodes can lead to
         problems due to replicated DDL statmeents not
         being able to execute anymore.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-database">
      <term><varname>ALTER DATABASE</varname>
       <indexterm>
        <primary><varname>ALTER DATABASE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER DATABASE</literal> cannot be replicated
        because &bdr; works on a
        per database level.
       </para>
       <para>
        In practice the primary problematic case is when trying to
        change settings on a per database basis using <literal>ALTER
         DATABASE ... SET ...</literal>, these have to be executed on
        every database for now.
       </para>
       <warning>
        <para>
         Renaming a database can lead to the connection
         information stored on some of the nodes not being
         valid anymore.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-tablespace">
      <term><varname>ALTER TABLESPACE</varname>
       <indexterm>
        <primary><varname>ALTER TABLESPACE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER TABLSPACE</literal> cannot be replicated
        because &bdr; works on a per
        database level. It is safe to execute on the individual
        nodes though.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </sect2>

  <sect2 id="ddl-replication-prohibited-commands" xreflabel="Prohibited DDL statements">
   <title>Prohibited DDL statements</title>

   <para>
    BDR prevents some DDL statements from running when it is active on a
    database. This protects the consistency of the system by disallowing
    statements that cannot be replicated correctly, or for which replication is
    not yet supported. Statements that are supported with some restrictions
    are covered in <xref linkend="ddl-replication-restricted-commands">;
    commands that are entirely disallowed in &bdr; are covered below.
   </para>

   <para>
    Generally unsupported statements are prevented from being
    executed, raising a <literal>feature_not_supported</literal>
    (SQLSTATE <literal>0A000</literal>) error.
   </para>

   <para>
    The following DDL commands are rejected by &bdr; when &bdr; is active on a
    database, and will fail with an <literal>ERROR</literal>:

    <variablelist>

     <varlistentry id="ddl-create-table-as">
      <term><varname>CREATE TABLE AS/SELECT INTO</varname>
       <indexterm>
        <primary><varname>CREATE TABLE AS</varname></primary>
       </indexterm>
       <indexterm>
        <primary><varname>SELECT INTO</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TABLE AS/SELECT INTO</literal> are
        prohibited unless <literal>UNLOGGED</literal>
        or <literal>UNLOGGED</literal> temporary is specified.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-table-of-type">
      <term><varname>CREATE TABLE ... OF TYPE</varname>
       <indexterm>
        <primary><varname>CREATE TABLE ... OF TYPE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TABLE ... OF TYPE</literal> is prohibited
        unless <literal>UNLOGGED</literal>
        or <literal>UNLOGGED</literal> temporary is specified.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-text-search-parser">
      <term><varname>CREATE TEXT SEARCH PARSER</varname>
       <indexterm>
        <primary><varname>CREATE TEXT SEARCH PARSER</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TEXT SEARCH PARSER</literal> is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-text-search-dictionary">
      <term><varname>CREATE TEXT SEARCH DICTIONARY</varname>
       <indexterm>
        <primary><varname>CREATE TEXT SEARCH DICTIONARY</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TEXT SEARCH DICTIONARY</literal> is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-text-search-dictionary">
      <term><varname>ALTER TEXT SEARCH DICTIONARY</varname>
       <indexterm>
        <primary><varname>ALTER TEXT SEARCH DICTIONARY</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER TEXT SEARCH DICTIONARY</literal> is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-text-search-template">
      <term><varname>CREATE TEXT SEARCH TEMPLATE</varname>
       <indexterm>
        <primary><varname>CREATE TEXT SEARCH TEMPLATE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TEXT SEARCH TEMPLATE</literal> is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-text-search-configuration">
      <term><varname>CREATE TEXT SEARCH CONFIGURATION</varname>
       <indexterm>
        <primary><varname>CREATE TEXT SEARCH CONFIGURATION</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE TEXT SEARCH template</literal> is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-text-search-configuration">
      <term><varname>ALTER TEXT SEARCH CONFIGURATION</varname>
       <indexterm>
        <primary><varname>ALTER TEXT SEARCH CONFIGURATION</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER TEXT SEARCH template</literal> is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-collation">
      <term><varname>CREATE COLLATION</varname>
       <indexterm>
        <primary><varname>CREATE COLLATION</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE CREATE COLLATION</literal> is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-extension">
      <term><varname>ALTER EXTENSION</varname>
       <indexterm>
        <primary><varname>ALTER INDEX</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER EXTENSION</literal> currently is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-foreign-data-wrapper">
      <term><varname>CREATE FOREIGN DATA WRAPPER</varname>
       <indexterm>
        <primary><varname>CREATE FOREIGN DATA WRAPPER</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE FOREIGN DATA WRAPPER</literal> currently is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-foreign-data-wrapper">
      <term><varname>ALTER FOREIGN DATA WRAPPER</varname>
       <indexterm>
        <primary><varname>ALTER FOREIGN DATA WRAPPER</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER FOREIGN DATA WRAPPER</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-server">
      <term><varname>CREATE SERVER</varname>
       <indexterm>
        <primary><varname>CREATE SERVER</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE SERVER</literal> currently is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-server">
      <term><varname>ALTER SERVER</varname>
       <indexterm>
        <primary><varname>ALTER SERVER</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER SERVER</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-user-mapping">
      <term><varname>CREATE USER MAPPING</varname>
       <indexterm>
        <primary><varname>CREATE USER MAPPING</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE USER MAPPING</literal> currently is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-user-mapping">
      <term><varname>ALTER USER MAPPING</varname>
       <indexterm>
        <primary><varname>ALTER USER MAPPING</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER USER MAPPING</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-drop-user-mapping">
      <term><varname>DROP USER MAPPING</varname>
       <indexterm>
        <primary><varname>DROP USER MAPPING</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>DROP USER MAPPING</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-refresh-materialized-view">
      <term><varname>REFRESH MATERIALIZED VIEW</varname>
       <indexterm>
        <primary><varname>REFRESH MATERIALIZED VIEW</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>REFRESH MATERIALIZED VIEW</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-language">
      <term><varname>CREATE LANGUAGE</varname>
       <indexterm>
        <primary><varname>CREATE LANGUAGE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE LANGUAGE</literal> currently is
        prohibited. Note that nearly all procedual languages are
        available as an extension and <literal>CREATE
         EXTENSION</literal> is supported.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-conversion">
      <term><varname>CREATE CONVERSION</varname>
       <indexterm>
        <primary><varname>CREATE CONVERSION</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE CONVERSION</literal> currently is
        prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-cast">
      <term><varname>CREATE CAST</varname>
       <indexterm>
        <primary><varname>CREATE CAST</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <note><para>
          <literal>CREATE CAST</literal> currently is prohibited. Note
          that <literal>CREATE CAST</literal> inside an extension is
          supported.
        </para></note>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-operator-family">
      <term><varname>CREATE OPERATOR FAMILY</varname>
       <indexterm>
        <primary><varname>CREATE OPERATOR FAMILY</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <note><para>
          <literal>CREATE OPERATOR FAMILY</literal> currently is prohibited. Note
          that <literal>CREATE OPERATOR FAMILY</literal> inside an extension is
          supported.
        </para></note>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-operator-family">
      <term><varname>ALTER OPERATOR FAMILY</varname>
       <indexterm>
        <primary><varname>ALTER OPERATOR FAMILY</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>ALTER OPERATOR FAMILY</literal> currently is
        prohibited.
        <note><para>
          Note that <literal>ALTER OPERATOR FAMILY</literal> inside an extension is supported.
        </para></note>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-operator-class">
      <term><varname>CREATE OPERATOR CLASS</varname>
       <indexterm>
        <primary><varname>CREATE OPERATOR CLASS</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>CREATE OPERATOR CLASS</literal> currently is
        prohibited.
        <note><para>
          Note that <literal>CREATE OPERATOR CLASS</literal> inside
          an extension is supported.
        </para></note>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-drop-owned">
      <term><varname>DROP OWNED</varname>
       <indexterm>
        <primary><varname>DROP OWNED</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        <literal>DROP OWNED</literal> is prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-security-label">
      <term><varname>SECURITY LABEL</varname>
       <indexterm>
        <primary><varname>SECURITY LABEL</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Except for some &bdr; internal use <literal>SECURITY
         LABEL</literal> is prohibited.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
  </sect2>

  <sect2 id="ddl-replication-restricted-commands" xreflabel="DDL statements with restrictions">
   <title>DDL statements with restrictions</title>

   <para>
    BDR prevents some DDL statements from running when it is active on a
    database. This protects the consistency of the system by disallowing
    statements that cannot be replicated correctly, or for which replication is
    not yet supported. Entirely prohibited statements are covered above in
    <xref linkend="ddl-replication-prohibited-commands">; commands where
    some subcommands or features are limited are covered below.
   </para>

   <para>
    If a statement is not permitted under BDR it is often
    possible to find another way to do the same thing. For
    example, you can't do a <literal>ALTER TABLE</literal>
    that'll cause a full table rewrite, but it's generally
    possible to rephrase that as a series of independent
    <literal>ALTER TABLE</literal> and <literal>UPDATE</literal>
    statements that don't do the full table rewrite.
    See <xref linkend="ddl-alter-table"> below for details on
    that example.
   </para>

   <para>
    Generally unsupported statements are prevented from being
    executed, raising a <literal>feature_not_supported</literal>
    (SQLSTATE <literal>0A000</literal>) error.
   </para>

   <para>
    The following statements or statement options are not currently
    permitted when BDR is active on a database:

    <variablelist>

     <varlistentry id="ddl-create-table">
      <term><varname>CREATE TABLE</varname>
       <indexterm>
        <primary><varname>CREATE TABLE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Generally <literal>CREATE TABLE</literal> is allowed. There
        are a few options/subcommands that are not supported.
       </para>

       <para>
        Not supported commands are:
        <itemizedlist spacing="compact" mark="bullet">
         <listitem>
          <para>
           <literal>WITH OIDS</literal> - outdated option, not deemed worth to add support for
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>OF TYPE</literal> - not supported yet
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>CONSTRAINT ... EXCLUDE</literal> - not supported yet
          </para>
         </listitem>
        </itemizedlist>

       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-table">
      <term><varname>ALTER TABLE</varname>
       <indexterm>
        <primary><varname>ALTER TABLE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Generally <literal>ALTER TABLE</literal> commands are
        allowed. There are a however several sub-commands that are
        not supported, mainly those that perform a full-table
        re-write.
       </para>

       <para>
        Not supported commands are:
        <itemizedlist spacing="compact" mark="bullet">
         <listitem>
          <para>
           <literal>ADD COLUMN ... DEFAULT</literal> - this option
           can unfortunately not be supported. It is however often
           possible to rewrite this into several, supported,
           commands:
           <programlisting>
            BEGIN;
            ALTER TABLE mtab ADD COLUMN newcol;
            ALTER TABLE mtab ALTER COLUMN newcal SET DEFAULT default_value;
            UPDATE mtab SET newcol = default_value;
           </programlisting>
           If preexisiting rows do not need the default value, the
           UPDATE can obviously be avoided. In that case doing
           separate <literal>ADD COLUMN</literal> and <literal>ALTER
            COLUMN ... SET DEFAULT</literal> commands are
           advantageous anyway as they don't rewrite the whole
           table.
          </para>
          <para>
           Unlike the single-statement version there will be a period in
           which rows have the new column, but the column value is
           null.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>ADD CONSTRAINT ... EXCLUDE</literal> - exclusion
           are not supported for now. Exclusion constraints don't
           make much sense in an asynchronous system and lead to
           changes that cannot be replayed.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>ALTER CONSTRAINT</literal> - changing constraint
           settings is not supported for now.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>ALTER COLUMN ... TYPE</literal> - changing a
           column's type is not supported. Chaning a column in a way
           that doesn't require table rewrites may be suppported at
           some point.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>ENABLE .. RULE</literal> - is not supported.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>DISABLE .. RULE</literal> - is not supported.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>[NO] INHERIT</literal> - is not supported.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>[NOT] OF TYPE</literal> - is not supported.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>ALTER COLUMN ... SET (..)</literal> - is not
           supported at the moment.
          </para>
         </listitem>

         <listitem>
          <para>
           <literal>SET (..)</literal> - is not supported at the
           moment.
          </para>
         </listitem>

        </itemizedlist>

       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-index">
      <term><varname>CREATE INDEX</varname>
       <indexterm>
        <primary><varname>CREATE INDEX</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Generally <literal>CREATE INDEX</literal> is supported,
        but <literal>CREATE UNIQUE INDEX ... WHERE</literal>,
        i.e. partial unique indexes are not allowed.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-create-sequence">
      <term><varname>CREATE SEQUENCE</varname>
       <indexterm>
        <primary><varname>CREATE SEQUENCE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Generally <literal>CREATE SEQUENCE</literal> is supported,
        but when using &bdr;'s distributed sequences, some options
        are prohibited.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ddl-alter-sequence">
      <term><varname>ALTER SEQUENCE</varname>
       <indexterm>
        <primary><varname>ALTER SEQUENCE</varname></primary>
       </indexterm>
      </term>
      <listitem>
       <para>
        Generally <literal>ALTER SEQUENCE</literal> is supported,
        but when using &bdr;'s distributed sequences, some options
        like <literal>START</literal> are prohibited. Several of
        them, like the aforementioned <literal>START</literal> can
        be specified during <literal>CREATE SEQUENCE</literal>.
       </para>
      </listitem>
     </varlistentry>


    </variablelist>
   </para>
  </sect2>
 </sect1>
</chapter>

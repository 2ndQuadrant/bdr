 <chapter id="quickstart-test">
  <title>Enabling and Testing &bdr Demo </title>
  <sect1 id="Creating">
    <title>Creating the demo databases</title>
    <para>
    Create the databases for this demo on each node/instance from the command line of your operating system:
    </para>
    <programlisting>
    createdb -p 5598 -U postgres bdrdemo
    createdb -p 5599 -U postgres bdrdemo
    </programlisting>
  </sect1>

  <sect1 id="Enabling">
    <title>Enabling BDR in SQL sessions for both of your nodes/instances</title>
    <para>
    On the first node/instance in database <quote>bdrdemo</quote> as postgreSQL superuser, create the extensions necessary for &bdr;:
    </para>
    <programlisting>
    psql -p 5598 -U postgres bdrdemo

       CREATE EXTENSION btree_gist;
       CREATE EXTENSION bdr;
    </programlisting>
    <para>
    Then you run a function that identifies a &bdr; group that delineates a connection string for other nodes to communicate with (for the first node, we will use port 5598) from the same SQL session as above on port 5598:
    </para>
    <programlisting>
    SELECT bdr.bdr_group_create(
      local_node_name := 'node1',
      node_external_dsn := 'port=5598 dbname=bdrdemo'
);
    </programlisting>
    <para>
    To ensure that the node is ready to replicate, run this function from the same SQL session as above on port 5598:
    </para>
    <programlisting>
    SELECT bdr.bdr_node_join_wait_for_ready();
    </programlisting>
    <para>
    On the second node/instance on port 5599 in database <quote>bdrdemo</quote> as postgreSQL superuser, create the extensions necessary for &bdr;:
    </para>
    <programlisting>
    psql -p 5599 -U postgres bdrdemo

       CREATE EXTENSION btree_gist;
       CREATE EXTENSION bdr;
    </programlisting>
    <para>
    Then run a function that joins this node/instance to your &bdr; group you created above (for the second node, we will use port 5599) from the same SQL session as above on port 5599:
    </para>
    <programlisting>
    SELECT bdr.bdr_group_join(
      local_node_name := 'node2',
      node_external_dsn := 'port=5599 dbname=bdrdemo'
      join_using_dsn := 'port=5598 dbname=bdrdemo'
);
    </programlisting>
    <para>
    To ensure that the node/instance is ready to replicate, run this function from the same SQL session as above on port 5599:
    </para>
    <programlisting>
    SELECT bdr.bdr_node_join_wait_for_ready();
    </programlisting>

  </sect1>

  <sect1 id="Testing">
    <title>Testing your BDR-enabled system</title>
    <para>
    Create a table and insert rows from your first node/instance:
    </para>
    <programlisting>
    psql -p 5598 -U postgres bdrdemo

      CREATE TABLE t1bdr (c1 INT, PRIMARY KEY (c1));
      INSERT INTO t1bdr VALUES (1);
      INSERT INTO t1bdr VALUES (2);
      -- you will see two rows
      SELECT * FROM t1bdr;
    </programlisting>
    <para>
    Check that the rows are there on your second node/instance. Now, delete a row:
    </para>
    <programlisting>
    psql -p 5599 -U postgres bdrdemo

      -- you will see two rows
      SELECT * FROM t1bdr;
      DELETE FROM t1bdr WHERE c1 = 2;
      -- you will see one row
      SELECT * FROM t1bdr;
    </programlisting>
    <para>
    Check that one row has been deleted from the first node/instance::
    </para>
    <programlisting>
    psql -p 5598 -U postgres bdrdemo

      -- you will see one row
      SELECT * FROM t1bdr;
    </programlisting>

  </sect1>
 </chapter>

<sect1 id="installation-source" xreflabel="Installing from source code">
 <title>Installing &bdr; or &udr; from source</title>

 <sect2 id="installation-source-prereqs">
  <title>Prerequisites for installing from source</title>
  <para>
   To install either &bdr; or &udr; the prerequisites for compiling
   &postgres; must be installed. These are described in &postgres;'s
   documentation
   on <ulink url="http://www.postgresql.org/docs/current/install-requirements.html">build requirements</ulink>
   and <ulink url="http://www.postgresql.org/docs/current/docguide-toolsets.html">build requirements for documentation</ulink>.
  </para>

  <para>
   On several systems the prerequisites for compiling &postgres; and
   &bdr;/&udr; can be installed using simple commands.

   <itemizedlist spacing="compact" mark="bullet">
    <listitem>
     <para>
      <literal>Debian</literal> and <literal>Ubuntu</literal>: First
      add the <ulink
      url="http://apt.postgresql.org/">apt.postgresql.org</ulink>
      repository to your <filename>sources.list</filename> if you
      have not already done so. Then install the pre-requisites for
      building PostgreSQL with:
      <programlisting>
       sudo apt-get update
       sudo apt-get build-dep postgresql-9.4
      </programlisting>
      </para>
    </listitem>
    <listitem>
     <para>
      <literal>RHEL or CentOS 6.x or 7.x</literal>: install the appropriate repository RPM
      for your system from <ulink url="http://yum.postgresql.org/repopackages.php">
      yum.postgresql.org</ulink>. Then install the prerequisites for building
      PostgreSQL with:
      <programlisting>
       sudo yum check-update
       sudo yum groupinstall "Development Tools"
       sudo yum install yum-utils openjade docbook-dtds docbook-style-dsssl docbook-style-xsl
       sudo yum-builddep postgresql94
      </programlisting>
     </para>
    </listitem>

   </itemizedlist>
  </para>
 </sect2>

 <sect2 id="installation-get-source">
  <title>Getting &bdr; source code</title>

  <para>
   There are two ways to get the &bdr; source code: with git, or by downloading tarballs of released versions.
  </para>

  <sect3>
   <title>Using <application>git</application> to get the &bdr; sources</title>

   <para>
    Use <application><ulink url="http://git-scm.org">git</ulink></application> if you expect
    to update often, you want to keep track of development or if you want to contribute
    changes to &bdr;. There is no reason <emphasis>not</emphasis> to use <application>git</application>
    if you're familiar with it.
   </para>

   <para>
    The source for &bdr; is maintained at
    <ulink url="http://git.postgresql.org/gitweb/?p=2ndquadrant_bdr.git;a=tree;h=refs/heads/bdr-plugin/next;hb=bdr-plugin/next">
    git.postgresql.org in the 2ndquadrant_bdr repository</ulink>. There are
    actually two independent source trees in this repository - one tree for
    the &bdr; plugin, and one for the modified version of PostgreSQL
    &pgmajorversion; that it requires to run. At the time of writing the
    main branches are:
    <itemizedlist>
     <listitem><para><filename>bdr-plugin/RELX_Y_STABLE</filename>:
        the stable releases of the &bdr; plugin (for example
        <filename>bdr-plugin/REL0_9_STABLE</filename> is latest source of 0.9.x).</para></listitem>
     <listitem><para><filename>bdr-plugin/next</filename>:
        the in-progress development version of the &bdr; plugin</para></listitem>
     <listitem><para><filename>bdr-pg/REL9_4_STABLE</filename>:
        the current stable release of the modified PostgreSQL that &bdr; requires.</para></listitem>
    </itemizedlist>
   </para>

   <para>
    There are also tags for each &bdr; release, e.g. <filename>bdr-plugin/0.8.0</filename>.
   </para>

   <para>
    To clone the source code using <application>git</application> you will
    need to run two clones, one for the &bdr; plugin sources and one for the
    patched PostgreSQL sources, e.g. (for the 0.9.x version of &bdr;):
    <programlisting>
     git clone -b bdr-pg/REL9_4_STABLE git://git.postgresql.org/git/2ndquadrant_bdr.git postgresql-bdr
     git clone -b bdr-plugin/REL0_9_STABLE git://git.postgresql.org/git/2ndquadrant_bdr.git bdr-plugin
    </programlisting>
   </para>

   <para>
    For more information on using <application>git</application> see
    <ulink url="http://git-scm.org/">git-scm.org</ulink>.
   </para>

  </sect3>

  <sect3>
   <title>Downloading release source tarballs</title>

   <para>
    Official BDR release source code is uploaded as tarballs to the
    &bdr; website along with a tarball checksum and a matching GnuPG
    signature. See
    <ulink url="http://2ndquadrant.com/bdr">http://2ndquadrant.com/bdr</ulink>
    for the download information. See <xref linkend="appendix-signatures">
    for information on verifying digital signatures.
   </para>

   <para>
    You will need to download <emphasis>both</emphasis> the patched
    PostgreSQL source (<filename>postgresql-bdr-[...].tar.gz</filename>) and
    the associated BDR release (<filename>bdr-[...].tar.gz</filename>).
   </para>

   <para>
    You may optionally verify the package checksums from the
    <literal>.md5</literal> files and/or verify the GnuPG signatures
    per <xref linkend="appendix-signatures">.
   </para>

   <para>
    After you unpack the source code archives using <literal>tar xf</literal>
    the installation process is the same as if you were installing from a git
    clone.
   </para>

  </sect3>

 </sect2>

 <sect2 id="installation-bdr-source">
  <title>Installation of &bdr; from source</title>
  <para>
   Installing &bdr; from source consists out of two steps: First
   compile and install &postgres; with the &bdr; additions; secondly
   compile and install the &bdr; plugin.
  </para>

  <para>
   The patched PostgreSQL required for BDR can be compiled using the
   <ulink
   url="http://www.postgresql.org/docs/current/static/installation.html">normal
   documented procedures</ulink>. That will usually be something
   like:
   <programlisting>
    cd /path/to/bdr-pg-source/
    ./configure --prefix=/path/to/install --enable-debug --with-openssl
    make -j4 -s install-world
   </programlisting>
  </para>
  <para>
   To then install &bdr; execute its configure script with the
   <application>pg_config</application> installed by the patched PostgreSQL
   in the <literal>PATH</literal> environment variable, e.g.:
   <programlisting>
    cd /path/to/bdr-plugin-source/
    PATH=/path/to/postgres/install/bin:"$PATH" ./configure
    make -j4 -s all
    make -s install
   </programlisting>
  </para>
 </sect2>

 <sect2 id="installation-udr-source">
  <title>Installation of &udr; from source</title>
  <para>
   Installing &udr; is simpler than installing &bdr;. It compiles
   against a stock (unmodified) &postgres; 9.4 if the relevant
   headers are installed.
  </para>

  <para>
   Most Linux distributions put the required header files in a "dev"
   or "devel" package. Exactly what to install depends on how you
   installed PostgreSQL in the first place.
   <itemizedlist>
    <listitem>
     <para>
      If you installed from apt.postgresql.org packages on
      Debian/Ubuntu then run:
      <programlisting>
       sudo apt-get install postgresql-server-dev-9.4
      </programlisting>
     </para>
    </listitem>
    <listitem>
     <para>
      If you installed from yum.postgresql.org packages on
      RHEL or CentOS then run:
      <programlisting>
       sudo yum install postgresql94-dev
      </programlisting>
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   To compile &udr; execute its configure script with &postgres;'s
   <application>pg_config</application> in the <literal>PATH</literal>.
   <programlisting>
    cd /path/to/bdr-plugin-source/
    PATH=/path/to/pg/install:"$PATH" ./configure
    make -j16 -s all
   </programlisting>
   On Debian/Ubuntu systems <application>pg_config</application> is on the default
   <literal>PATH</literal> so you can just run
   <programlisting>
    ./configure
   </programlisting>
   On RHEL/CentOS systems you will need to put
   <filename>/usr/pgsql-9.4/bin</filename> on the
   <literal>PATH</literal>, e.g.:
   <programlisting>
    PATH=/usr/pgsql-9.4/bin:$PATH ./configure
   </programlisting>
  </para>
 </sect2>

</sect1>
